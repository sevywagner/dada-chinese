{"version":3,"file":"static/js/690.a6087501.chunk.js","mappings":"iJACA,MAAuB,4BAAvB,EAA0D,4BAA1D,EAA8F,6BAA9F,EAAmI,6BAAnI,EAA2K,gCAA3K,EAAqN,+BAArN,EAAqQ,sCAArQ,EAAsT,gCAAtT,EAAqW,oC,SCyBrW,EAxByB,SAAH,GAA0C,IAApCA,EAAK,EAALA,MAAOC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAI,EAAJA,KAChD,OACI,+BACI,iBAAKC,UAAWC,EAAY,WACxB,oBAASD,UAAWD,EAAOE,EAAiBA,EAAuB,UAC/D,cAAGD,UAAWC,EAAa,SAAEL,OAEjC,oBAASI,UAAWD,EAAOE,EAA2BA,EAAe,UACjE,iBAAKD,UAAWD,EAAOE,EAAcA,EAAmB,UACnDH,EAAW,IAAK,eAAGE,UAAWC,EAAgB,UAAC,IAAEH,KACjDD,GAAQ,eAAGG,UAAWC,EAAa,UAAC,IAAEJ,MAAa,cAAGG,UAAWC,EAAa,SAAC,eAGvFF,IAAQ,oBAASC,UAAWC,EAAe,UACxC,iBAAKD,UAAWC,EAAY,WACxB,uBAAIF,EAAKG,MAAM,KAAK,MACpB,uBAAIH,EAAKG,MAAM,KAAK,cAM5C,C,gHCvBA,EAAuB,oBAAvB,EAAuD,yBAAvD,EAA0F,uBAA1F,EAAyH,qBAAzH,EAA4J,2B,mBCoD5J,EA9Cc,WACV,IAAMC,GAAKC,EAAAA,EAAAA,MAAYC,QACvB,GAA0BC,EAAAA,EAAAA,YAAU,eAA7BC,EAAK,KAAEC,EAAQ,KAiBtB,OAfAC,EAAAA,EAAAA,YAAU,WACNC,MAAM,+DAAgE,CAClEC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAET,QAASF,IAChCY,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAACC,GACL,OAAOA,EAASC,MACpB,IAAGF,MAAK,SAACG,GACLX,EAASW,EAAKZ,MAClB,GACJ,GAAG,KAIC,8BACKA,IAAS,iBAAKP,UAAWC,EAAY,WAClC,eAAGD,UAAWoB,EAAAA,EAAAA,MAAiB,UAAC,cAAYb,EAAMc,SAClD,iBAAKrB,UAAWC,EAAoB,WAChC,cAAGD,UAAWC,EAAe,SAAC,YAC7BM,EAAMe,MAAMC,KAAI,SAACC,GAAI,OAClB,SAACC,EAAA,EAAgB,CAEb7B,MAAO4B,EAAK5B,MACZC,MAAO2B,EAAK3B,MACZC,SAAU0B,EAAK1B,SACfC,KAAMyB,EAAKzB,MAJNyB,EAAK5B,MAKZ,KAEN,iBAAKI,UAAWC,EAAa,WACzB,cAAGD,UAAWC,EAAsB,SAAC,YACrC,eAAGD,UAAWC,EAAsB,UAAC,IAAEM,EAAMmB,oBAGpDnB,EAAMoB,UAAW,cAAG3B,UAAWoB,EAAAA,EAAAA,SAAoB,SAAEb,EAAMoB,WAC5D,cAAG3B,UAAWoB,EAAAA,EAAAA,SAAoB,SAAEb,EAAMqB,gBAI1D,C","sources":["webpack://dada-chinese/./src/components/cart/css/checkout-item.module.css?6584","components/cart/CheckoutCartItem.js","webpack://dada-chinese/./src/pages/css/order.module.css?f376","pages/Order.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"checkout-item_item__ds-f5\",\"wrap\":\"checkout-item_wrap__xvNEG\",\"title\":\"checkout-item_title__Q75xj\",\"price\":\"checkout-item_price__Q4+Ir\",\"quantity\":\"checkout-item_quantity__R6c8N\",\"section\":\"checkout-item_section__Gu457\",\"middle-section\":\"checkout-item_middle-section__Qunet\",\"mid-wrap\":\"checkout-item_mid-wrap__KLH5b\",\"half-section\":\"checkout-item_half-section__WOtWb\"};","import styles from './css/checkout-item.module.css';\n\nconst CheckoutCartItem = ({ title, price, quantity, time }) => {\n    return (\n        <>\n            <div className={styles.item}>\n                <section className={time ? styles.section : styles['half-section']}>\n                    <p className={styles.title}>{title}</p>\n                </section>\n                <section className={time ? styles['middle-section'] : styles.section}>\n                    <div className={time ? styles.wrap : styles['mid-wrap']}>\n                        {quantity > 1 && <p className={styles.quantity}>x{quantity}</p>}\n                        {price ? <p className={styles.price}>${price}</p> : <p className={styles.price}>Price</p>}\n                    </div>\n                </section>\n                {time && <section className={styles.section}>\n                    <div className={styles.wrap}>\n                        <p>{time.split(' ')[0]}</p>\n                        <p>{time.split(' ')[1]}</p>\n                    </div>\n                </section>}\n            </div>\n        </>\n    );\n}\n\nexport default CheckoutCartItem;","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"order_root__tBD0i\",\"list-wrap\":\"order_list-wrap__hO7Lm\",\"summary\":\"order_summary__npd+A\",\"total\":\"order_total__KMe3R\",\"total__text\":\"order_total__text__oD2Nr\"};","import { useEffect, useState } from 'react';\nimport { useParams, useLoaderData } from 'react-router';\nimport CheckoutCartItem from '../components/cart/CheckoutCartItem';\n\nimport styles from './css/order.module.css';\nimport mainStyles from './../components/main.module.css';\n\nconst Order = () => {\n    const id = useParams().orderId;\n    const [order, setOrder] = useState();\n\n    useEffect(() => {\n        fetch('https://dada-chinese-rest-api.herokuapp.com/shop/fetch-order', {\n            method: 'POST',\n            body: JSON.stringify({ orderId: id }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then((response) => {\n            return response.json();\n        }).then((data) => {\n            setOrder(data.order);\n        })\n    }, []);\n\n\n    return (\n        <>\n            {order && <div className={styles.root}>\n                <p className={mainStyles.title}>Order from {order.date}</p>\n                <div className={styles['list-wrap']}>\n                    <p className={styles.summary}>Summary</p>\n                    {order.items.map((item) => (\n                        <CheckoutCartItem \n                            key={item.title}\n                            title={item.title} \n                            price={item.price} \n                            quantity={item.quantity}\n                            time={item.time}\n                        />\n                        ))}\n                    <div className={styles.total}>\n                        <p className={styles['total__text']}>Total:</p>\n                        <p className={styles['total__text']}>${order.totalPrice}</p>\n                    </div>\n                </div>\n                {order.address && <p className={mainStyles.subtitle}>{order.address}</p>}\n                <p className={mainStyles.subtitle}>{order.userEmail}</p>\n            </div>}\n        </>\n    );\n}\n\nexport default Order;"],"names":["title","price","quantity","time","className","styles","split","id","useParams","orderId","useState","order","setOrder","useEffect","fetch","method","body","JSON","stringify","headers","then","response","json","data","mainStyles","date","items","map","item","CheckoutCartItem","totalPrice","address","userEmail"],"sourceRoot":""}