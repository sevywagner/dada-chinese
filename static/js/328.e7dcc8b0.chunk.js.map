{"version":3,"file":"static/js/328.e7dcc8b0.chunk.js","mappings":"qNA0GA,UAjG0B,WACtB,OAAoCA,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,KAChC,GAAgCF,EAAAA,EAAAA,YAAU,eAAnCG,EAAQ,KAAEC,EAAW,KAEtBC,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,IAAI,IACxCG,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAaC,EAAAA,EAAAA,UACbC,GAAYD,EAAAA,EAAAA,UAiElB,OATAE,EAAAA,EAAAA,YAAU,WACFd,GACAe,YAAW,WACPd,GAAc,GACdQ,EAAS,iBACb,GAAG,IAEX,GAAG,CAACT,EAAYS,KAGZ,yBACMT,GAaO,0BACL,cAAGgB,UAAWC,EAAAA,EAAAA,MAAiB,SAAC,mCAdrB,4BACX,cAAGD,UAAWC,EAAAA,EAAAA,MAAiB,SAAC,mBAC9Bf,IAAY,cAAGc,UAAWC,EAAAA,EAAAA,SAAoB,SAAC,8BAChDf,IAAY,cAAGc,UAAWC,EAAAA,EAAAA,MAAiB,SAAEf,KAC9C,gBAAKc,UAAWC,EAAAA,EAAAA,KAAgB,UAC5B,kBAAMD,UAAWE,EAAAA,EAAAA,KAAaC,SAtExB,SAACC,GACnBA,EAAMC,iBAGN,IAAIC,EAA6C,KAAnCT,EAAUU,QAAQC,MAAMC,OAAgBd,EAAWY,QAAQC,MAAQ,WAAaX,EAAUU,QAAQC,MAAQb,EAAWY,QAAQC,MACvIE,GAAQ,EAEZC,MAAM,6DAA8D,CAChEC,OAAQ,MACRC,KAAMC,KAAKC,UAAU,CAAEC,MAAO5B,EAAK4B,MAAOC,WAAY7B,EAAK6B,WAAYX,QAASA,IAChFY,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAYC,aAAaC,QAAQ,YAErDC,MAAK,SAACC,GAKL,OAJKA,EAAOC,KACRd,GAAQ,GAGLa,EAAOE,MAClB,IAAGH,MAAK,SAACI,GACDhB,EACAvB,EAAYuC,EAAKhB,QAGjBiB,QAAQC,IAAIF,EAAKG,SACjBlB,MAAM,+DAAgE,CAClEC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEe,UAAW1C,EAAK4B,QACvCE,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAYC,aAAaC,QAAQ,YAErDC,MAAK,SAACC,GACL,GAAKA,EAAOC,GAIZ,OAAOD,EAAOE,MAClB,IAAGH,MAAK,SAACI,GACLC,QAAQC,IAAIF,EAChB,IAAGK,OAAM,SAACC,GACNL,QAAQC,IAAII,EAChB,IAEAzC,EAAS0C,EAAAA,EAAAA,aACThD,GAAc,GAEtB,IAAG8C,OAAM,SAACC,GACN7C,EAAY6C,EAAIH,SAChBF,QAAQC,IAAII,EAChB,GACJ,EAkBsE,WAClD,2BAAO,aACP,kBAAOE,KAAK,OAAOC,IAAKxC,KACxB,2BAAO,sBACP,kBAAOuC,KAAK,OAAOC,IAAKtC,KACxB,SAAC,IAAM,CAACqC,KAAK,SAAQ,SAAC,0BAQ9C,C,qBCvGA,KAAgB,KAAO,uBAAuB,KAAO,uB","sources":["pages/OrderConfirmation.js","webpack://dada-chinese/./src/pages/css/checkout.module.css?c1f4"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport Button from \"../components/util/Button\";\nimport { cartActions } from \"../store/redux/cart\";\n\nimport mainStyles from './../components/main.module.css';\nimport styles from './css/checkout.module.css';\n\nconst OrderConfirmation = () => {\n    const [hasOrdered, setHasOrdered] = useState(false);\n    const [hasError, setHasError] = useState();\n\n    const cart = useSelector((state) => state.cart);\n    const dispatch = useDispatch();\n\n    const navigate = useNavigate();\n\n    const addressRef = useRef();\n    const aptNumRef = useRef();\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        \n        let address = aptNumRef.current.value.trim() !== '' ? addressRef.current.value + ' Apt #: ' + aptNumRef.current.value : addressRef.current.value;\n        let error = false;\n        \n        fetch('https://dada-chinese-rest-api.herokuapp.com/shop/new-order', {\n            method: 'PUT',\n            body: JSON.stringify({ items: cart.items, totalPrice: cart.totalPrice, address: address }),\n            headers: {\n                \"Content-Type\": \"Application/json\",\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        }).then((result) => {\n            if (!result.ok) {\n                error = true;\n            }\n            \n            return result.json();\n        }).then((data) => {\n            if (error) {\n                setHasError(data.error);\n                return;\n            } else {\n                console.log(data.message);\n                fetch('https://dada-chinese-rest-api.herokuapp.com/shop/order-email', {\n                    method: 'POST',\n                    body: JSON.stringify({ cartItems: cart.items }),\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                    }\n                }).then((result) => {\n                    if (!result.ok) {\n                        return;\n                    }\n        \n                    return result.json();\n                }).then((data) => {\n                    console.log(data);\n                }).catch((err) => {\n                    console.log(err);\n                });\n\n                dispatch(cartActions.resetCart());\n                setHasOrdered(true);\n            }\n        }).catch((err) => {\n            setHasError(err.message);\n            console.log(err);\n        });\n    }\n\n    useEffect(() => {\n        if (hasOrdered) {\n            setTimeout(() => {\n                setHasOrdered(false);\n                navigate('/dada-chinese/');\n            }, 5000);\n        }\n    }, [hasOrdered, navigate]);\n\n    return (\n        <div>\n            {!hasOrdered ? <div>\n                <p className={mainStyles.title}>Last Thing...</p>\n                {!hasError && <p className={mainStyles.subtitle}>Please enter your Address</p>}\n                {hasError && <p className={mainStyles.error}>{hasError}</p>}\n                <div className={mainStyles.wrap}>\n                    <form className={styles.form} onSubmit={submitHandler}>\n                        <label>Address</label>\n                        <input type='text' ref={addressRef} />\n                        <label>Apt # (optional)</label>\n                        <input type='text' ref={aptNumRef} />\n                        <Button type=\"submit\">Finish Order</Button>\n                    </form>\n                </div>\n            </div> : <div>\n                <p className={mainStyles.title}>Your order has been placed!</p>\n            </div>}\n        </div>\n    );\n}\n\nexport default OrderConfirmation;","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"checkout_wrap__qFQpx\",\"form\":\"checkout_form__8VUDs\"};"],"names":["useState","hasOrdered","setHasOrdered","hasError","setHasError","cart","useSelector","state","dispatch","useDispatch","navigate","useNavigate","addressRef","useRef","aptNumRef","useEffect","setTimeout","className","mainStyles","styles","onSubmit","event","preventDefault","address","current","value","trim","error","fetch","method","body","JSON","stringify","items","totalPrice","headers","Authorization","localStorage","getItem","then","result","ok","json","data","console","log","message","cartItems","catch","err","cartActions","type","ref"],"sourceRoot":""}