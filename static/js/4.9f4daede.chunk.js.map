{"version":3,"file":"static/js/4.9f4daede.chunk.js","mappings":"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","sources":["../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","components/contact/ContactForm.js","pages/Contact.js"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.10.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import { useRef, useState } from \"react\";\nimport useInput from \"../../hooks/use-input\";\nimport styles from \"./css/contact-form.module.css\";\nimport mainStyles from './../main.module.css';\nimport emailjs from '@emailjs/browser';\n\nconst ContactForm = () => {\n  const formRef = useRef();\n  const [hasSent, setHasSent] = useState(false);\n  const [sendError, setSendError] = useState(false);\n  const [error, setError] = useState();\n\n  const {\n    value: name,\n    isValid: nameIsValid,\n    hasError: nameHasError,\n    valueChangeHandler: nameChangeHandler,\n    blurHandler: nameBlurHandler,\n    reset: resetName,\n  } = useInput((data) => data.trim() !== \"\");\n\n  const {\n    value: email,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    blurHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = useInput((data) => data.includes(\"@\"));\n\n  const {\n    value: message,\n    isValid: messageIsValid,\n    hasError: messageHasError,\n    valueChangeHandler: messageChangeHandler,\n    blurHandler: messageBlurHandler,\n    reset: resetMessage,\n  } = useInput((data) => data.trim() !== '');\n\n  const classNames = {\n    name: nameHasError ? styles.invalid : \"\",\n    email: emailHasError ? styles.invalid : \"\",\n    message: messageHasError ? styles.invalid : \"\"\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    if (!nameIsValid) {\n      return setError('Please enter a valid name');\n    } else if (!emailIsValid) {\n      return setError('Please enter a valid email');\n    } else if (!messageIsValid) {\n      return setError('Please enter a valid message');\n    }\n\n    if (nameIsValid && emailIsValid && messageIsValid) {\n      emailjs.sendForm('service_iff9mux', 'template_lszstvs', formRef.current, 'PyPxMRbgnyMI7gkRQ').then((result) => {\n        console.log(result);\n        setHasSent(true);\n\n        resetName();\n        resetEmail();\n        resetMessage();\n      }).catch((err) => {\n        setSendError(true);\n        console.log(err);\n      })\n    }\n  }\n\n  return (\n    <>\n      {hasSent && <p className={mainStyles.subtitle}>Sent, we will get back to you shortly</p>}\n      {sendError && <p className={mainStyles.error}>Error</p>}\n      {error && <p className={mainStyles.error}>{error}</p>}\n      <div className={styles.wrap}>\n        <form className={styles.contact} onSubmit={submitHandler} ref={formRef}>\n\n          <label className={styles.label}>Name</label>\n          <input\n            className={classNames.name}\n            type=\"text\"\n            onChange={nameChangeHandler}\n            onBlur={nameBlurHandler}\n            value={name}\n            name=\"name\"\n          />\n\n          <label className={styles.label}>Email</label>\n          <input\n            className={classNames.email}\n            type=\"text\"\n            onChange={emailChangeHandler}\n            onBlur={emailBlurHandler}\n            value={email}\n            name=\"email\"\n          />\n\n          <label className={styles.label}>Message</label>\n          <textarea\n            className={classNames.message}\n            onChange={messageChangeHandler}\n            onBlur={messageBlurHandler}\n            value={message}\n            name='message'\n          ></textarea>\n\n          <div className={styles.wrap}>\n            <button className={styles.submit} type=\"submit\">Submit</button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default ContactForm;","import mainStyles from './../components/main.module.css';\nimport ContactForm from '../components/contact/ContactForm';\n\nconst Contact = () => {\n    return (\n        <div>\n            <p className={mainStyles.title}>Contact</p>\n            <ContactForm />\n        </div>\n    );\n}\n\nexport default Contact;"],"names":["store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","formRef","useRef","useState","hasSent","setHasSent","sendError","setSendError","error","setError","useInput","trim","name","value","nameIsValid","isValid","nameHasError","hasError","nameChangeHandler","valueChangeHandler","nameBlurHandler","blurHandler","resetName","reset","includes","email","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmail","message","messageIsValid","messageHasError","messageChangeHandler","messageBlurHandler","resetMessage","classNames","styles","className","mainStyles","onSubmit","event","preventDefault","emailjs","current","then","result","console","log","catch","err","ref","type","onChange","onBlur"],"sourceRoot":""}