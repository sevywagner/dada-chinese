{"version":3,"file":"static/js/7.cacd165f.chunk.js","mappings":"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","sources":["hooks/use-input.js","webpack://dada-chinese/./src/pages/css/sign-in.module.css?7c04","components/sign-in/SignInForm.js","components/sign-in/SignUpForm.js","pages/SignIn.js","webpack://dada-chinese/./src/components/sign-in/css/sign-in-form.module.css?61f8"],"sourcesContent":["import { useState } from \"react\";\n\nconst useInput = (validateData) => {\n    const [enteredValue, setEnteredValue] = useState('');\n    const [isTouched, setIsTouched] = useState(false);\n\n    let isValid = validateData(enteredValue);\n    let hasError = !isValid && isTouched;\n\n    const blurHandler = () => {\n        setIsTouched(true);\n    }\n\n    const valueChangeHandler = (event) => {\n        setEnteredValue(event.target.value);\n    }\n\n    const reset = () => {\n        setEnteredValue('');\n        setIsTouched(false);\n    }\n\n\n    return {\n        value: enteredValue,\n        isValid,\n        hasError,\n        blurHandler,\n        valueChangeHandler,\n        reset\n    }\n}\n\nexport default useInput;","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sign-in_root__97RE8\",\"elevate\":\"sign-in_elevate__vTr2y\",\"form\":\"sign-in_form__Cuhq7\"};","import { useRef, useState } from \"react\";\nimport { useContext } from \"react\";\nimport { authContext } from \"../../store/context/auth-context\";\nimport { useNavigate } from \"react-router\";\nimport styles from \"./css/sign-in-form.module.css\";\nimport Button from \"../util/Button\";\n\nconst SignInForm = () => {\n  const [error, setError] = useState();\n  const navigate = useNavigate();\n  const authCtx = useContext(authContext);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  console.log(authCtx.isLoggedIn);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    fetch('https://dada-chinese-rest-api.herokuapp.com/auth/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        email: emailInputRef.current.value,\n        password: passwordInputRef.current.value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then((response) => {\n      if (!response.ok) {\n        setError('Invalid Credentials');\n        throw new Error('Bad response');\n      }\n\n      return response.json()\n    }).then((data) => {\n      console.log(data);\n      authCtx.loginHandler(data.token, data.expiration, data.isAdmin);\n      navigate('/dada-chinese')\n    }).catch((err) => {\n      console.log(err.message);\n    })\n  }\n\n  return (\n    <>\n      <form className={styles.form} onSubmit={submitHandler}>\n        {error && <p>{error}</p>}\n        <div className={styles.inputs}>\n          <div className={styles.block}>\n            <label>Email</label>\n            <input type=\"text\" ref={emailInputRef} />\n          </div>\n\n          <div className={styles.block}>\n            <label>Password</label>\n            <input type=\"password\" ref={passwordInputRef} />\n          </div>\n        </div>\n        <Button type=\"submit\">Log in</Button>\n      </form>\n    </>\n  );\n};\n\nexport default SignInForm;","import { useState } from \"react\";\nimport useInput from \"../../hooks/use-input\";\nimport Button from \"../util/Button\";\nimport styles from './css/sign-in-form.module.css';\n\nconst SignUpForm = ({ onSubmit }) => {\n  const [error, setError] = useState({\n    hasError: false,\n    message: ''\n  });\n  \n  const {\n    value: name,\n    isValid: nameIsValid,\n    hasError: nameHasError,\n    valueChangeHandler: nameChangeHandler,\n    blurHandler: nameBlurHandler,\n    reset: resetName,\n  } = useInput((data) => data.trim() !== \"\");\n\n  const {\n    value: email,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    blurHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = useInput((data) => data.includes(\"@\"));\n\n  const {\n    value: password,\n    isValid: passwordIsValid,\n    hasError: passwordHasError,\n    valueChangeHandler: passwordChangeHandler,\n    blurHandler: passwordBlurHandler,\n    reset: resetPassword,\n  } = useInput(\n    (data) =>\n      data.trim().length >= 8 &&\n      (data.includes(\"!\") ||\n        data.includes(\"@\") ||\n        data.includes(\".\") ||\n        data.includes(\"/\") ||\n        data.includes(\"(\") ||\n        data.includes(\")\"))\n  );\n\n  const {\n    value: password2,\n    isValid: password2IsValid,\n    hasError: password2HasError,\n    valueChangeHandler: password2ChangeHandler,\n    blurHandler: password2BlurHandler,\n    reset: resetPassword2,\n  } = useInput((data) => data.trim() !== '');\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    if (nameIsValid && emailIsValid && passwordIsValid && password2IsValid) {\n      fetch('https://dada-chinese-rest-api.herokuapp.com/auth/signup', {\n        method: 'PUT',\n        body: JSON.stringify({\n          name,\n          email,\n          password,\n          confirmPassword: password2\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then((response) => {\n        if (!response.ok) {\n          throw new Error('Response error');\n        }\n        return response.json();\n      }).then((data) => {\n        console.log(data);\n      }).catch((err) => {\n        console.log(err);\n      });\n\n      resetName();\n      resetEmail();\n      resetPassword();\n      resetPassword2();\n    } else {\n      setError({\n        hasError: true,\n        message: 'Invalid input'\n      });\n    }\n  }\n\n  const classNames = {\n    name: nameHasError ? styles.invalid : \"\",\n    email: emailHasError ? styles.invalid : \"\",\n    password: passwordHasError ? styles.invalid : \"\",\n    password2: password2HasError ? styles.invalid : \"\"\n  };\n\n  return (\n    <>\n      {error.hasError && <p>{error.message}</p>}\n      <form onSubmit={submitHandler}>\n\n        <label className={styles.label}>Name</label>\n        <input\n          className={classNames.name}\n          type=\"text\"\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={name}\n          name=\"name\"\n        />\n\n        <label className={styles.label}>Email</label>\n        <input\n          className={classNames.email}\n          type=\"text\"\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={email}\n          name=\"email\"\n        />\n\n        <label className={styles.label}>Set password</label>\n        <input\n          className={classNames.password}\n          type=\"text\"\n          onChange={passwordChangeHandler}\n          onBlur={passwordBlurHandler}\n          value={password}\n          name=\"password\"\n        />\n\n        <label className={styles.label}>Confirm password</label>\n        <input\n          className={classNames.password}\n          type=\"text\"\n          onChange={password2ChangeHandler}\n          onBlur={password2BlurHandler}\n          value={password2}\n          name=\"password2\"\n        />\n\n        <Button className={styles.submit} type=\"submit\">Submit</Button>\n      </form>\n    </>\n  );\n};\n\nexport default SignUpForm;","import mainStyles from './../components/main.module.css';\nimport styles from './css/sign-in.module.css';\nimport SignInForm from '../components/sign-in/SignInForm';\nimport SignUpForm from '../components/sign-in/SignUpForm';\n\nconst SignIn = ({ mode }) => {\n    return (\n        <div className={styles.root}>\n            <div className={styles['elevate']}>\n                <p className={mainStyles.title}>Sign {mode === 'register' ? 'up' : 'in'}</p>\n                {mode === 'login' && \n                    <div className={styles.form}>\n                        <SignInForm />\n                    </div>\n                }\n                {mode === 'register' &&\n                    <div className={styles.form}>\n                        <SignUpForm />\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default SignIn;","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"sign-in-form_wrap__uyA1X\",\"block\":\"sign-in-form_block__sFmMD\",\"invalid\":\"sign-in-form_invalid__Fj2iK\",\"inputs\":\"sign-in-form_inputs__MVwqR\",\"input-field\":\"sign-in-form_input-field__tLrji\"};"],"names":["validateData","useState","enteredValue","setEnteredValue","isTouched","setIsTouched","isValid","value","hasError","blurHandler","valueChangeHandler","event","target","reset","error","setError","navigate","useNavigate","authCtx","useContext","authContext","emailInputRef","useRef","passwordInputRef","console","log","isLoggedIn","className","styles","onSubmit","preventDefault","fetch","method","body","JSON","stringify","email","current","password","headers","then","response","ok","Error","json","data","loginHandler","token","expiration","isAdmin","catch","err","message","type","ref","Button","useInput","trim","name","nameIsValid","nameHasError","nameChangeHandler","nameBlurHandler","resetName","includes","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmail","length","passwordIsValid","passwordHasError","passwordChangeHandler","passwordBlurHandler","resetPassword","password2","password2IsValid","password2HasError","password2ChangeHandler","password2BlurHandler","resetPassword2","classNames","confirmPassword","onChange","onBlur","mode","mainStyles"],"sourceRoot":""}