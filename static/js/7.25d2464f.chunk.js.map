{"version":3,"file":"static/js/7.25d2464f.chunk.js","mappings":"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","sources":["hooks/use-input.js","webpack://dada-chinese/./src/pages/css/sign-in.module.css?7c04","components/sign-in/SignInForm.js","components/sign-in/SignUpForm.js","pages/SignIn.js","webpack://dada-chinese/./src/components/sign-in/css/sign-in-form.module.css?61f8"],"sourcesContent":["import { useState } from \"react\";\n\nconst useInput = (validateData) => {\n    const [enteredValue, setEnteredValue] = useState('');\n    const [isTouched, setIsTouched] = useState(false);\n\n    let isValid = validateData(enteredValue);\n    let hasError = !isValid && isTouched;\n\n    const blurHandler = () => {\n        setIsTouched(true);\n    }\n\n    const valueChangeHandler = (event) => {\n        setEnteredValue(event.target.value);\n    }\n\n    const reset = () => {\n        setEnteredValue('');\n        setIsTouched(false);\n    }\n\n\n    return {\n        value: enteredValue,\n        isValid,\n        hasError,\n        blurHandler,\n        valueChangeHandler,\n        reset\n    }\n}\n\nexport default useInput;","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sign-in_root__97RE8\",\"elevate\":\"sign-in_elevate__vTr2y\",\"form\":\"sign-in_form__Cuhq7\"};","import { useRef, useState } from \"react\";\nimport { useContext } from \"react\";\nimport { authContext } from \"../../store/context/auth-context\";\nimport { useNavigate } from \"react-router\";\nimport styles from \"./css/sign-in-form.module.css\";\nimport Button from \"../util/Button\";\n\nconst SignInForm = () => {\n  const [error, setError] = useState();\n  const navigate = useNavigate();\n  const authCtx = useContext(authContext);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    let responseIsOk;\n\n    fetch('https://dada-chinese-rest-api.herokuapp.com/auth/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        email: emailInputRef.current.value,\n        password: passwordInputRef.current.value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then((response) => {\n      if (!response.ok) {\n        responseIsOk = false;\n      } else {\n        responseIsOk = true;\n      }\n\n      return response.json()\n    }).then((data) => {\n      if (!responseIsOk) {\n        return setError(data.error);\n      }\n      authCtx.loginHandler(data.token, data.expiration);\n      navigate('/dada-chinese');\n    }).catch((err) => {\n      console.log(err.message);\n    })\n  }\n\n  return (\n    <>\n      <form className={styles.form} onSubmit={submitHandler}>\n        {error && <p>{error}</p>}\n        <div className={styles.inputs}>\n          <div className={styles.block}>\n            <label>Email</label>\n            <input type=\"text\" ref={emailInputRef} />\n          </div>\n\n          <div className={styles.block}>\n            <label>Password</label>\n            <input type=\"password\" ref={passwordInputRef} />\n          </div>\n        </div>\n        <Button type=\"submit\">Log in</Button>\n      </form>\n    </>\n  );\n};\n\nexport default SignInForm;","import { useNavigate } from \"react-router\";\nimport useInput from \"../../hooks/use-input\";\nimport Button from \"../util/Button\";\nimport styles from './css/sign-in-form.module.css';\n\nconst SignUpForm = ({ errorHandler }) => {\n  const navigate = useNavigate();\n\n  const {\n    value: name,\n    isValid: nameIsValid,\n    hasError: nameHasError,\n    valueChangeHandler: nameChangeHandler,\n    blurHandler: nameBlurHandler,\n    reset: resetName,\n  } = useInput((data) => data.trim() !== \"\");\n\n  const {\n    value: email,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    blurHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = useInput((data) => data.includes(\"@\"));\n\n  const {\n    value: password,\n    isValid: passwordIsValid,\n    hasError: passwordHasError,\n    valueChangeHandler: passwordChangeHandler,\n    blurHandler: passwordBlurHandler,\n    reset: resetPassword,\n  } = useInput((data) => data.trim().length >= 8);\n\n  const {\n    value: password2,\n    isValid: password2IsValid,\n    hasError: password2HasError,\n    valueChangeHandler: password2ChangeHandler,\n    blurHandler: password2BlurHandler,\n    reset: resetPassword2,\n  } = useInput((data) => data.trim() !== '');\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    if (!nameIsValid) {\n      errorHandler('Please enter a valid email');\n      return;\n    }\n\n    if (!emailIsValid) {\n      errorHandler('Please enter a valid email');\n      return;\n    }\n\n    if (!passwordIsValid) {\n      errorHandler('Please enter a valid password');\n      return;\n    }\n\n    \n    if (nameIsValid && emailIsValid && passwordIsValid && password2IsValid) {\n      let responseIsOk;\n      fetch('https://dada-chinese-rest-api.herokuapp.com/auth/signup', {\n        method: 'PUT',\n        body: JSON.stringify({\n          name,\n          email,\n          password,\n          confirmPassword: password2\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then((response) => {\n        if (!response.ok) {\n          responseIsOk = false;\n        } else {\n          responseIsOk = true;\n        }\n\n        return response.json();\n      }).then((data) => {\n        if (!responseIsOk) {\n          return errorHandler(data.error);\n        } else {\n          resetName();\n          resetEmail();\n          resetPassword();\n          resetPassword2();\n          errorHandler(null);\n          navigate('/dada-chinese/sign-in');\n        }\n      }).catch((err) => {\n        console.log(err);\n      });\n\n    } else {\n      errorHandler('Invalid Credentials');\n    }\n  }\n\n  const classNames = {\n    name: nameHasError ? styles.invalid : \"\",\n    email: emailHasError ? styles.invalid : \"\",\n    password: passwordHasError ? styles.invalid : \"\",\n    password2: password2HasError ? styles.invalid : \"\"\n  };\n\n  return (\n    <>\n      <form onSubmit={submitHandler}>\n\n        <label className={styles.label}>Name</label>\n        <input\n          className={classNames.name}\n          type=\"text\"\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={name}\n          name=\"name\"\n          placeholder=\"Full name\"\n        />\n\n        <label className={styles.label}>Email</label>\n        <input\n          className={classNames.email}\n          type=\"text\"\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={email}\n          name=\"email\"\n          placeholder=\"test@test.com\"\n        />\n\n        <label className={styles.label}>Set password</label>\n        <input\n          className={classNames.password}\n          type=\"password\"\n          onChange={passwordChangeHandler}\n          onBlur={passwordBlurHandler}\n          value={password}\n          name=\"password\"\n          placeholder=\"Must be 8 characters and include a number\"\n        />\n\n        <label className={styles.label}>Confirm password</label>\n        <input\n          className={classNames.password}\n          type=\"password\"\n          onChange={password2ChangeHandler}\n          onBlur={password2BlurHandler}\n          value={password2}\n          name=\"password2\"\n        />\n\n        <Button className={styles.submit} type=\"submit\">Submit</Button>\n      </form>\n    </>\n  );\n};\n\nexport default SignUpForm;","import mainStyles from './../components/main.module.css';\nimport styles from './css/sign-in.module.css';\nimport SignInForm from '../components/sign-in/SignInForm';\nimport SignUpForm from '../components/sign-in/SignUpForm';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router';\n\nconst SignIn = ({ mode }) => {\n    const location = useLocation();\n    const [error, setError] = useState();\n\n    const errorHandler = (errorMessage) => {\n        setError(errorMessage);\n    }\n\n    useEffect(() => {\n        setError(null);\n    }, [location.pathname]);\n\n    return (\n        <div className={styles.root}>\n            <div className={styles['elevate']}>\n                <p className={mainStyles.title}>Sign {mode === 'register' ? 'up' : 'in'}</p>\n                {error && <p>{error}</p>}\n                {mode === 'login' && \n                    <div className={styles.form}>\n                        <SignInForm errorHandler={errorHandler} />\n                    </div>\n                }\n                {mode === 'register' &&\n                    <div className={styles.form}>\n                        <SignUpForm errorHandler={errorHandler} />\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default SignIn;","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"sign-in-form_wrap__uyA1X\",\"block\":\"sign-in-form_block__sFmMD\",\"invalid\":\"sign-in-form_invalid__Fj2iK\",\"inputs\":\"sign-in-form_inputs__MVwqR\",\"input-field\":\"sign-in-form_input-field__tLrji\"};"],"names":["validateData","useState","enteredValue","setEnteredValue","isTouched","setIsTouched","isValid","value","hasError","blurHandler","valueChangeHandler","event","target","reset","error","setError","navigate","useNavigate","authCtx","useContext","authContext","emailInputRef","useRef","passwordInputRef","className","styles","onSubmit","responseIsOk","preventDefault","fetch","method","body","JSON","stringify","email","current","password","headers","then","response","ok","json","data","loginHandler","token","expiration","catch","err","console","log","message","type","ref","Button","errorHandler","useInput","trim","name","nameIsValid","nameHasError","nameChangeHandler","nameBlurHandler","resetName","includes","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmail","length","passwordIsValid","passwordHasError","passwordChangeHandler","passwordBlurHandler","resetPassword","password2","password2IsValid","password2HasError","password2ChangeHandler","password2BlurHandler","resetPassword2","classNames","confirmPassword","onChange","onBlur","placeholder","mode","location","useLocation","errorMessage","useEffect","pathname","mainStyles"],"sourceRoot":""}